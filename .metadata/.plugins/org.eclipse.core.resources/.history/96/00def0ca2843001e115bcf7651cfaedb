package org.zerock.controller;

import java.nio.charset.StandardCharsets;
import java.util.ArrayList;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.SessionAttribute;
import org.zerock.domain.CarVO;
import org.zerock.domain.RecallVO;
import org.zerock.mapper.SelectionMapper;
import org.zerock.service.GetRecallDataService;
import org.zerock.service.GetRecallDataServiceImpl;
import org.zerock.service.MemberServiceImpl;
import org.zerock.service.SelectionService;

import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.util.JSONPObject;

import lombok.extern.slf4j.Slf4j;

@Controller
@RequestMapping("/")
@Slf4j
public class MainPageController {
	
	@Autowired
	SelectionService selectionService;
	@Autowired
	GetRecallDataServiceImpl dataServiceImpl;
	
//메인페이지 
@GetMapping("/mainPage")
public String showMainPage (Model model, HttpServletRequest request) {
	HttpSession session = request.getSession();
	String memberId = (String) session.getAttribute("memberId");
	//db에서 제조사 리스트 검색 후 Model 객체에 담아 뷰에 반환
	model.addAttribute("brands", selectionService.selectBrands());
	// 로그인 상태일 때 model 객체에 memberId 담아서 반환 
	if(memberId!=null){
		model.addAttribute("memberId",memberId);
	}
	return "/mainPage";
}
//메인페이지에서 브랜드 selection 선택되었을 때 서버에서 car selection의 option으로 제공될 차량목록 반환 
@GetMapping("/selection/car")
public ResponseEntity<String> selectCars(@RequestParam("brand") String brand){

	ObjectMapper objectMapper =new ObjectMapper();
	String brands;
	try {
		brands = objectMapper.writeValueAsString(selectionService.selectCars(brand));
		HttpHeaders header = new HttpHeaders();
		header.add("Content-type","text/pln;charset=utf-8");
		ResponseEntity<String> response = new ResponseEntity<String>(brands,header,HttpStatus.OK);
		return response;
	} catch (JsonProcessingException e) {
		e.printStackTrace();
		return ResponseEntity.status(HttpStatus.BAD_REQUEST).body(e.getMessage());
	}	
}

//car selection에서 선택된 차량의 생상년도 리스트 반환
@GetMapping("/selection/year")
@ResponseBody
public ArrayList<CarVO> selectYear(@RequestParam("brand") String brand , @RequestParam("car") String car){
		ArrayList<CarVO> cars = selectionService.selectYears(brand, car);
		return cars;	
}

//selection 선택 후 검색 버튼 클릭 시 검색결과 list 페이지 반환 
@RequestMapping(value="/searchBySelection",method =RequestMethod.GET)
public String selectRecallList(@RequestParam("brand")String brand,@RequestParam("car")String carName,@RequestParam("year")String fromDate,@RequestParam(name ="page", defaultValue ="1") int page,@RequestParam(name = "size", defaultValue="10") int size, Model model){
		//db에서 제조사 리스트 검색 후 Model 객체에 담아 뷰에 반환
		model.addAttribute("brands", selectionService.selectBrands());
		
		//검색 결과인 리콜 게시글들을 리스트로 model 객체에 담아 뷰에 반환
		ArrayList<RecallVO> posts =  dataServiceImpl.getRecallPosts(brand, carName, fromDate,page,size);
		model.addAttribute("posts", posts);
		
	return "/recallListPage";
}


}
