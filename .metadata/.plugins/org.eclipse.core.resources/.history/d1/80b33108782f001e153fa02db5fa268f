package org.zerock.service;





import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLEncoder;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.web.reactive.function.client.WebClient;

import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.util.JSONPObject;

@Service
public class GetRecallDataServiceImpl implements GetRecallDataService {

	// 한국교통안전공단_자동차결함리콜  데이터 받기 
	@Override
	public String getRecallData() throws Exception{
		
			int perPage =1;
			int totalCount=0;
			String data;
			while(true) {
				
				 // 호출할 url(쿼리 x)
				StringBuilder urlBuilder = new StringBuilder("http://api.odcloud.kr/api/3048950/v1/uddi:a8f35a10-4a6b-4ee6-b3a3-b2949d6287fd");
				//url에 쿼리 추가 
				urlBuilder.append("?page=1");
				urlBuilder.append("&perPage="+Integer.toString(perPage));
				urlBuilder.append("&serviceKey=HWXD%2BBeBRR%2FFOn%2Bs2jxKre%2FP511RFDfO3KcErF3kx1GyrS8rLtyqzTmk6v9anvUdtoKANN74B0r6GizYleBOIA%3D%3D");
				
				//URL 생성 
				URL url = new URL(urlBuilder.toString());
				
				//커넥션 get, 헤더 설정 
				HttpURLConnection conn = (HttpURLConnection) url.openConnection();
		        conn.setRequestMethod("GET");
		        conn.setRequestProperty("Content-type", "application/json");
				
		        // 요청 후 data 받기 
		        System.out.println("Response code: " + conn.getResponseCode());
		        BufferedReader rd;
		        if(conn.getResponseCode() >= 200 && conn.getResponseCode() <= 300) {
		            rd = new BufferedReader(new InputStreamReader(conn.getInputStream()));
		        } else {
		            rd = new BufferedReader(new InputStreamReader(conn.getErrorStream()));
		        }
		        StringBuilder sb = new StringBuilder();
		        String line;
		        while ((line = rd.readLine()) != null) {
		            sb.append(line);
		        }
		        rd.close();
	        conn.disconnect();
	        
	         data = sb.toString(); //요청을 통해 받은 data String으로 변환
			
	         //요청을 통해 받은 데이터 json 객체로 변환 
	         try {
	 			ObjectMapper objectMapper = new ObjectMapper();
	 			JsonNode rootNode = objectMapper.readTree(data);
	 			JsonNode dataNode = rootNode.get("data");
	 			
	 			// 총 데이터 개수 
	 			totalCount = (int)Integer.valueOf(rootNode.get("totalCount").asText());
	 			
	 			
	 		}catch(Exception e) {
	 			e.getMessage();
	 		}
				if(perPage == totalCount){ 
					break;
				}
				perPage =totalCount;
				
			}
			
	    
	}}
	




